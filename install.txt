*** Dependencies ***

< iRODS 3.1
This module uses the msiGetFormattedSystemTime microservice from the guinot module.

>= iRODS 3.1
No dependencies, msiGetFormattedSystemTime is available out of the box

*** Installation ***

Automatically using the irodssetup script:

1.1 (< iRODS 3.2) enable the module "<irods>/modules/guinot/info.txt" 
1.2. enable the module in "<irods>/modules/EUDAT-PID/info.txt"
1.3. rerun the irodsssetup script

Manually:

1.1. (< iRODS 3.2) ./scripts/configure --enable-guinot
1.2. ./scripts/configure --enable-EUDAT-PID
1.3. make clean
1.4. make


2. create a symbolic link to the eudat rulebase
	cd <irods>
	ln -s <absolute-irods-path>/modules/EUDAT-PID/rulebase/eudat-v1.re ./server/config/reConfigs/eudat.re

3. edit <irods>/server/config/server.config and append ",eudat" to "reRuleSet" 
	(make sure to include the comma and no spaces)

4. configure iRODS hooks.
	edit the <irods>/server/config/reConfigs/core.re file and add the following two acPostProcForPutHooks:

	acPostProcForPut {
        	ON($objPath like "\*.replicate") {
                	processReplicationCommandFile($objPath);
        	}
	}
	acPostProcForPut {
        	ON($objPath like "\*.pid.create") {
                	processPIDCommandFile($objPath);
       	 	}
	}

5. properly configure the default resource in <irods>/server/config/reConfigs/core.re

6.1 install the python scripts
	cd <irods>
        ln -s <absolute-irods-path>/modules/EUDAT-PID/cmd/* ./server/bin/cmd/
        check permissions on the scripts and make sure they are executable by the irods user
            e.g.chmod u+x cmd/*

6.2 update the "getEpicApiParameters" rule in "./server/config/reConfigs/eudat.re"
    - Configure the credential storage type: "os": stored on the local filesystem or "irods": stored on de irods namespace.
    - Set the path to the credentials file
    - Set the proper values in the credentials file (see ./cmd/credentials_example for an example)

7. create a shared space in all zones as configured in the eudat.re rulebase getSharedCollection function.
        - defaults to "<zone>/replicate"
        - make sure all users involved in the replication can write in this collection.

8.1 test the epic api interaction by running the "./cmd/epicclient.py test" script manually
8.2 test the replication by changing and triggering "replicate.r" rule in <irods>/modules/EUDAT-PID/rules


*** Command files ***

The command files are written to the shared iRODS space and are used to control replications and PID management

1) *.replicate

    Contains a list of replication commands separated by commas:
        command1,command2,command3

    Each replication command contains three parameters, separated by a semicolon:
        "*pid;*source;*destination"
            *pid            the handle of the source object  
            *source         the iRODS location of the source object
            *destination    the iRODS location of the destination object (will be created if it does not exist)

2) *.pid.create

    Contains a command to create a new PID:

    "create;*pid;*destination"
        *pid                the handle of the source object (the parent)
        *destination        the iRODS location of the destination object 

3) *.pid.update

    Contians a command to update a PID:
    
    "update;*pid;*new_pid"
        *pid            the handle of the source object (the parent)
        *new_pid        the (generated) handle of the destination object (the child)


*** TODO ***

- improve logic and data actual written/conveyed
    --> merge pid.create and pid.update actions in a single command file
- improve error handling
 
