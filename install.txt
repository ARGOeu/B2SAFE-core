*** Dependencies ***

*** Installation ***

This Setup describes the procedure to enable the B2SAFE module for iRODS 3.3

Enable the module

Automatically:

1.1. enable the module in "<irods>/modules/B2SAFE/info.txt"
     If a previous version of the module is present, disable it before to install the new one, in "<irods>/
     modules/OLD_MODULE/info.txt" (if the directory name is the same, change it)
     
1.2. rerun the irodssetup script

Manually:

1.1. <irods>/scripts/configure --enable-B2SAFE
     If a previous version of the module is present, disable it before to install the new one (if the directory  
     name is the same, change it):
     <irods>/scripts/configure --disable-OLD_MODULE --enable-B2SAFE
1.2. make clean
1.3. make
1.4 <irods>/irodsctl restart


2. create a symbolic link to the eudat rulebase
  cd <irods>
  ln -s <absolute-irods-path>/modules/B2SAFE/rulebase/eudat.re ./server/config/reConfigs/eudat.re
  ln -s <absolute-irods-path>/modules/B2SAFE/rulebase/replication.re ./server/config/reConfigs/replication.re
  ln -s <absolute-irods-path>/modules/B2SAFE/rulebase/pid-service.re ./server/config/reConfigs/pid-service.re
  ln -s <absolute-irods-path>/modules/B2SAFE/rulebase/catchError.re ./server/config/reConfigs/catchError.re
  ln -s <absolute-irods-path>/modules/B2SAFE/rulebase/eudat-authZ-filters.re ./server/config/reConfigs/eudat-authZ-filters.re
  ln -s <absolute-irods-path>/modules/B2SAFE/rulebase/local.re ./server/config/reConfigs/local.re

3. edit <irods>/server/config/server.config and append ",eudat,replication,pid-service,catchError,eudat-authZ-filters,local" to "reRuleSet" 
	(make sure to include the comma and no spaces)

4. configure iRODS hooks.
	edit the <irods>/server/config/reConfigs/core.re file and add the following two acPostProcForPutHooks:

	acPostProcForPut {
        	ON($objPath like "\*.replicate") {
                	processReplicationCommandFile($objPath);
        	}
	}
	acPostProcForPut {
        	ON($objPath like "\*.pid.create") {
                	processPIDCommandFile($objPath);
       	 	}
	}

5. properly configure the default resource in <irods>/server/config/reConfigs/core.re

6.1 install the python scripts
	cd <irods>
        ln -s <absolute-irods-path>/modules/B2SAFE/cmd/* ./server/bin/cmd/
        check permissions on the scripts and make sure they are executable by the irods user
            e.g.chmod u+x cmd/*

6.2 update the "getEpicApiParameters" rule in "./server/config/reConfigs/local.re"
    - Configure the credential storage type: "os": stored on the local filesystem or "irods": stored on de irods namespace.
    - Set the path to the credentials file
    - set the correct serverID to include the fully qualified hostname. For instance: "irods://node.domain.com:1247"
    - Set the proper values in the credentials file (see ./cmd/credentials_example for an example)
6.3 update the "getAuthZParameters" rule in "./server/config/reConfigs/local.re"
    - Set the proper values in modules/B2SAFE/cmd/authz.map.json
6.4 update the "getLogParameters" rule in "./server/config/reConfigs/local.re"
    - Set the proper values in modules/B2SAFE/cmd/log.manager.conf

7. create a shared space in all zones as configured in the eudat.re rulebase getSharedCollection function.
        - defaults to "<zone>/replicate"
        - make sure all users involved in the replication can write in this collection.

8.0.1 change "#!/usr/bin/env python" in the python scripts in modules/B2SAFE/cmd/ to your python installation
8.0.2 install httplib2, simplejson and pylint:
	httplib2
	download from http://code.google.com/p/httplib2
	python setup.py install

	simplejson
	download from http://pypi.python.org/pypi/simplejson/
	python setup.py install

	ubuntu: apt-get install python-httplib2 python-simplejson

	ubuntu: apt-get install pylint
  
8.1 test the epic api interaction by running the "./cmd/epicclient.py test" script manually and with "iexecmd epicclient.py"
8.2 test the replication by changing and triggering "replicate.r" rule in <irods>/modules/B2SAFE/rules

DATACENTER only:

it is necessary to configure the authz.map.json file in order to allow user to execute rules, which calls external scripts (see documentation).

it is necessary to configure the log.manager.conf file in order to enable the logging system (see documentation).

*** Command files ***

The command files are written to the shared iRODS space and are used to control replications and PID management

1) *.replicate

    Contains a list of replication commands separated by commas:
        command1,command2,command3

    Each replication command contains three parameters, separated by a semicolon:
        "*pid;*source;*destination"
            *pid            the handle of the source object  
            *source         the iRODS location of the source object
            *destination    the iRODS location of the destination object (will be created if it does not exist)

2) *.pid.create

    Contains a command to create a new PID:

    "create;*pid;*destination"
        *pid                the handle of the source object (the parent)
        *destination        the iRODS location of the destination object 

3) *.pid.update

    Contains a command to update a PID:
    
    "update;*pid;*new_pid"
        *pid            the handle of the source object (the parent)
        *new_pid        the (generated) handle of the destination object (the child)


*** TODO ***

- improve logic and data actual written/conveyed
    --> merge pid.create and pid.update actions in a single command file
- improve error handling


*** Know bugs ***

- the rule set string in the file <irods>/server/config/server.config has a limit of 64 characters.
  Hence the error message: 
    ERROR: rstrcpy not enough space in dest, slen:65, maxLen:64
  means that the string has to be made shorter.
- the character '&' is not managed by the function "EUDATSearchPID": the epic client invocation fails.
